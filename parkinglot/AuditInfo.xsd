<?xml version="1.0" encoding="utf-8"?>
<xs:schema
	targetNamespace="http://cufxstandards.com/v4/AuditInfo.xsd"
	version="4.4.$Revision$"
	xmlns="http://cufxstandards.com/v4/AuditInfo.xsd"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:common="http://cufxstandards.com/v4/Common.xsd"
	xmlns:user="http://cufxstandards.com/v4/User.xsd"

	elementFormDefault="qualified"
	attributeFormDefault="unqualified">


	<xs:import namespace="http://cufxstandards.com/v4/Common.xsd" schemaLocation="Common.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/User.xsd" schemaLocation="User.xsd" />

	<xs:element name= "auditInfoList" type ="AuditInfoList">
		<xs:annotation>
			<xs:documentation>
				The audit info collection/array contains all the audit information for a given set of audit events. 
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="AuditInfoList">
		<xs:annotation>
			<xs:documentation>
				The audit info collection/array contains all the audit information.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="auditInfo" type="AuditInfo" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								The audit info list is the collection of elements that describes an auditable event. 
							</xs:documentation>
						</xs:annotation>
					</xs:element >
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AuditInfo">
		<xs:sequence>
			<xs:element name="creationevent" type="AuditEvent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The audit event information that created the account.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lastmodifiednevent" type="AuditEvent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The audit event information for the last modification to the account.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="deletionevent" type="AuditEvent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The audit event information for the deletion of the account.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="customData" type="common:CustomData"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Access profile level name/data pairs list of fields that are not yet available in the general
						specification.  This should be used as a LAST RESORT as any customizations will not be supported by all
						data providers or processed by all client applications. ANY use of this field must be reported to the
						architecture or working group committee to ensure that fields are somehow handled in the future release
						of specifications.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="AuditEvent">
		<xs:annotation>
			<xs:documentation>
				The standard definition for event tracking.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="auditEventId" type="AuditEventId" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The Id for the audit event.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventDescription" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The description of the event.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventDateTime" type="xs:dateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Date and time the event data occurred in the source system.
						The date/time should be ISO 8601 UTC format.
						yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28)
						formats are supported.  The time is assumed to be 00:00Z if omitted.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventCreatedBy" type="user:UserId" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The unique identifier of the user that created the event in the system.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventIpAddress" type="common:IpAddress" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The Ip Address that created the event.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="customData" type="common:CustomData" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						AuditEvent name/data pairs list of fields that are not yet available in the general specification.
						This should be used as a LAST RESORT as any customizations will not be supported by all
						data providers or processed by all client applications.  ANY use of this field must be
						reported to the architecture or working group committee to ensure that fields are somehow
						handled in the future release of specifications.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="AuditEventId">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>
					The Id for the audit event.
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="AuditEventIdList">
		<xs:annotation>
			<xs:documentation>
				The list of audit event ID's that should be returned or affected by a read, update or delete account request.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="auditEventId" type="AuditEventId" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								The Id for the audit event.
							</xs:documentation>
						</xs:annotation>
					</xs:element >
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

</xs:schema>
